FORMAT: 1A

# Behalf API for Vendors - v3
Behalf API for Vendors describes Behalf's functionalities available for an authenticated client (vendor) by API calls.

Using this API, a remote system can create new Behalf customers, pre-approve them for loans and generate referred payments with Behalf. 

In this reference you can find information about the actions Behalf exposes and the data resources the API returns as responses to these requests.

# URL and REST Structure
Behalf’s API uses the secured https scheme only. Requests in http will be completely ignored.

All calls are sent to the Behalf domain  "behalf.com" , and for convenience reasons the prefix  <strong>https://behalf.com</strong> is omitted in all URLs mentioned in this document. 

The Behalf API calls rely on REST verbs to perform actions or to retrieve information:

Resource creation is done using the POST action, where parameters are passed in the request body.

For Example:

    POST /api/account/
    { "firstName": "firstname",
      "lastName": "lastname",
      "contact": {"email": "email"},
      "companyDetails": {"name": "company name"}
    }


Resource data is retrieved using the GET action and the associated query part of the URL.

For Example:

    GET /api/account/{accountId}/terms?vendor={vendorId}

Resource modification is done using the PUT action, where parameters are passed in the request body.

For Example:

    PUT /api/account/{accountId}/personalAddress
    { "streetAddress": "123rd 9th East st.",
      "zipCode": "44321",
      "apt_unit": "12c",
      "phone": "9718332561"
    }

Some resources’ properties can be modified directly (or indirectly) using the PATCH action.

For Example:

    PATCH /api/banks/{bankid}
    { "primary": true
    }


Note that Resource removal (usually done by the DELETE action) is not used in this version.

# Required Headers
The Behalf API strictly requires several headers to be sent in order to perform authentication and identify legitimate requests. All requests must include the following headers:

**X-Behalf-Signature**: An authentication signature used for authentication. More details in the authentication section

**Accept**: The client should specify the desired response format. For now, only application/json is supported.

**Content-Type**: *POST*, *PATCH* and *PUT* requests must also specify the body’s format as application/json

# Request Parameters
Parameters used to pass information for requests are strictly defined for their contents. Requests to the API failing to provide legal values are rejected outright.

# Response Structure
Standard response structure will include the following header:

    Content-Type: application/json

## Data Types
The response body will include a JSON encoded object of the resource requested.
The JSON structure returned is limited to primitives (boolean, number, string) and compounds (array, objects, null).

Dates and DateTime elements are explicitly expected to be formatted in ISO8601.

DateTime elements accept a timezone in input but will always return a UTC formatted ISO8601 string.

Paramters that accept 'me' as input, will also accept 'ME' and 'Me'.
The API will replace those symbols with the requestor ID.



## Response Codes
Response codes indicate the way the requested action was handled:

**200**: OK - the action was executed and completed

**201**: Created - standard response to a POST action which also indicates that resource creation is also completed

**202**: Accepted - The action is queued and will be executed. 

Errors are indicated by http response code along with a corresponding human readable message. Additional details will be attached as a JSON encoded resource structure.

Standard errors are:

**400**: Parameter validation failed
            
**401**: Authentication required or failed

    {
        "type": "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html",
        "title": "Unauthorized",
        "status": 401,
        "detail": "Unauthorized"
    }
    
**403**: Requested resource is not available for the currently authenticated user

**404**: Resource not found

**405**: Method not allowed

**409**: Conflict

**422**: Unprocessable Entity due to input validation error

    {
        "validation_messages": {
            "companyDetails": {
                "name": {
                    "stringLengthTooLong": "The input is more than 25 characters long"
                }
            }
        },
        "type": "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html",
        "title": "Unprocessable Entity",
        "status": 422,
        "detail": "Failed Validation"
    }

**500**: Resource action failed due to internal error

**503**: Resource is currently unavailable due to maintenance or overloading

**530**: Resource is currently unavailable, try again later. This response code will have a Retry-After header to suggest an estimated retry time

**531**: Related acount is missing required attributes (SSN or Address).

**532**: Credit Line Declined.

Specific application errors are returned as 500 errors in the range 530 - 580

## Hypermedia Links

The Behalf API supports Hypermedia Links as part of its standard response structure. For more information about Hypermedia Links: http://en.wikipedia.org/wiki/HATEOAS.

For a retrieved resource data (e.g. consumer), the Hypermedia Links that are provided indicate the next available steps for the current resource. Based on these links, a developer or an automated process can explore the API or get indications for the next steps in the current workflow.
This next step is described as a hyperlink URL which represents a resource. This resource can be called using http verbs normally. Note that some actions respond only to specific verbs, where an "invalid method error" (405) will be returned if a specific verb is unavailable.

You can always find out what verbs are available by using the OPTIONS http VERB on a resource.

Hypermedia Links structure example:

    "_links": {
        "self": {
            "href": "https://behalf.com/api/account/{accountId}"
        },
        "terms": {
            "href": "https://behalf.com/api/account/{accountId}/terms"
        },
        "customer-sales": {
            "href": "https://behalf.com/api/customer-sales-info/{linkId}"
        }
    }

# Authentication
The X-Behalf-Signature header contains a credentials identifier and a credentials signature. The identifier is a unique ID (Public Key) generated by Behalf for each client (vendor). This ID is not secret. The signature, however, is a hash generated by the client for authentication, using his Private Key (provided by Behalf).

## Obtaining or Revoking Public/Private Keys

Public and Private keys for communication using Behalf API can be obtained through Behalf's Customer Support service. Only certified vendors and verified customers may obtain keys for integration.

Keys are provided as requested and only a single pair is provided for every single user.

## Using Private Key for Request Signing
The credentials signature is based on the URL path, the request body (empty string if none is present) and the query parameters.

These strings are concatenated to each other in a particular order, and the credentials' secret (private) key is used to sign that concatenated string.

The process of creating the signature starts with serializing the request data into a string in a consistent manner:

    <url path><request-body-json | empty string><un-formatted-request-query-parameters | empty string>

The generated string is then fed into a sha256 hmac function, keyed by the private key. The resulting hash is sent in the signature header.

## Signature Generation Example:
URL:

    https://behalf.com/api/account/my-account-id

With the Private Key:

    "my-private-key"

The string for hashing is:

    "/api/account/my-account-id"

Run (in php online functions):

    echo bin2hex(mhash( MHASH_SHA256, "/api/account/my-account-id", "my-private-key"));

OR

    echo hmac_hash( 'sha256', "/api/account/my-account-id", "my-private-key");

The Signing result (created in http://sandbox.onlinephpfunctions.com/) is:

    927af76b39e6498b0704cadc0b9a7e91a6bca18e227dadc34a3ee88e83b2cb8d

Thus the resulting X-Behalf-Signature header is:

    X-Behalf-Signature: my-public-key;927af76b39e6498b0704cadc0b9a7e91a6bca18e227dadc34a3ee88e83b2cb8d

# Versioning
The Behalf API supports a soft versioning policy which provides for changes in behavior, input and output options. Soft versioning means that output and input may be modified as long as it keeps backwards compatibility by not modifying or removing existing elements. Behalf is allowed to add new **optional** parameters or **new** output elements without changing the version of the API.

Any modification of input, output or behavior of an **existing** (and deployed) API must be done on a new version and allow for an essentially different API to replace the old one in the new version. Naturally, the old version must continue to work and keep to its previous behavior regardless of changes to any other version, higher or lower.

Version negotiation is done through the URL path and is optional. 
If Version is not specified within the URL path then the latest API version will be used.
An unknown or unsupported version will be rejected outright.

The format of the Version within the URL path (when used) is:

    /api/V3/{......}

# Vendor Basic Workflows
There are few basic workflows commonly used by vendors with the Behalf API:

- Create a New Behalf Customer
- Retrieve Behalf Terms for a Customer
- Refer a New Payment to Behalf Customer
- Retrieve Payment Status

## Create a New Behalf Customer
In order to offer Behalf Terms to his customer, a vendor should first create a Behalf Account for that customer, 
<strong>including</strong> customer's Personal and Business addresses. 
This is done by a single API call:
- [Create an Account](#reference/accounts/account-resource/Create-an-Account)

Note that some of the customer's details may be changed later, if and when updated, 
using the API call:
- [Update Account Details](#reference/accounts/account-resource/update-account-details)

## Retrieve Behalf Terms for a Customer
When the vendor's customer has a Behalf Account - the vendor can get the Terms which Behalf assigns to this customer. 
The Terms include the customer's Credit-Line, Available Balance, Max Duration, Pricing and available Repayment-Plans. 
Customer's Terms may change along time, pending on Behalf's criteria and customer's performance.
The customer's Terms are retrieved using a single API call:
- [Create Account Terms](#reference/terms/account-terms-resource/create-account-details)

Note that calculation of customer's Terms, especially in the first time, may take in extreme cases up to a couple of minutes. 
In those cases the vendor should retry to retrieve the customer's Terms later. 

## Refer a New Payment to Behalf Customer
A vendor can refer a new Payment to a Behalf customer who has sufficient available Balance.
This is done with a single API call:
- [Create a New Payment](#reference/payments/payment-resource/)

## Retrieve Payment Status
In order for a referred Payment to be Approved by Behalf - it should be accepted (submitted) by the customer, after selecting his preferred repayment plan.
This may take some time as it depends on the customer's availability and response time.
The vendor may, at any point of time, get the updated status of any of his Payments.
This is done by a single API call:
- [Retrieve Payment Details](#reference/payments/payment-resource/retrieve-payment-details)

A vendor can cancel a referred Payment any time <strong>before</strong> the Payment is Approved by Behalf.
This is done by a single API call:
- [Update Payment Status](#reference/payments/payment-resource/update-payment-status)

         
# Group Accounts

## Account Resource [/api/account/] 
Account resource describes a single set of credentials and an associated Company. 
This resource is available to authenticated users for posting.

### Create an Account [POST]
This action creates a new Account resource or adds <strong>missing</strong> information to an <strong>existing</strong> one. 
It cannot be used to override/replace <strong>existing</strong> information.
Additionally, this action creates a link between the currently authenticated user (vendor) and the created account (customer).

This POST can get two affirmative responses : 200 or 201

**The 201 response** indicates the resource was created successfully and the requesting user is linked to the newly created account.

**The 200 response** indicates the resource already existed and the requesting user is now linked to that account.

In either case, the same resource is returned. An existing resource will be updated with new information only if that information is missing from the resource. An existing property will not be overridden by a POST.

Note that the "accountBalance" property depends on a completion of Terms retrieval for the account. Before that, this parameter may be 0.

+ Request Mandatory parameters only (application/json)

    + Body

            {
                "firstName": "firstname",
                "lastName":  "lastname",
                "contact": {"email":"email"},
                "companyDetails": {"name": "company name"}
            }
    
    + Schema

            {
                "type": "object",
                "required": true,
                "properties": {
                    "firstName": {
                        "type": "string",
                        "required": true
                    },
                    "lastName": {
                        "type": "string",
                        "required": true
                    },
                    "contact": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "email": {
                                "type": "string",
                                "required": true
                            }
                        }
                    },
                    "companyDetails": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "name": {
                                "type": "string",
                                "required": true
                            }
                        }
                    }
                }
            }

+ Response 200 (application/json)
    
    + Body
    
            {
                "accountId": "account-id",
                "firstName": "firstname",
                "lastName": "lastname",
                "contact":{
                    "contactId": "contact-id", "email":"email"
                },
                "companyDetails": {
                    "name": "company name",
                },
                "_links": {
                    "self": {
                        "href": "https://behalf.com/api/account/account-id"
                    },
                    "terms": {
                        "href": "https://behalf.com/api/account/account-id/terms"
                    },
                    "customer-sales": {
                        "href": "https://behalf.com/api/customer-sales-info/link-id"
                    }
                }
            }

+ Response 201 (application/json)
    
    + Body
    
            {
                "accountId": "account-id",
                "firstName": "firstname",
                "lastName": "lastname",
                "contact":{
                    "contactId": "contact-id", "email":"email"
                },
                "companyDetails": {
                    "name": "company name",
                },
                "_links": {
                    "self": {
                        "href": "https://behalf.com/api/account/account-id"
                    },
                    "terms": {
                        "href": "https://behalf.com/api/account/account-id/terms"
                    },
                    "customer-sales": {
                        "href": "https://behalf.com/api/customer-sales-info/link-id"
                    }
                }
            }

+ Request All available parameters (application/json)
    
    + Body
    
            {
                "firstName": "firstname",
                "lastName":  "lastname",
                "contact": {"email":"email"},
                "companyDetails": {
                    "name": "company name",
                    "duns": "DUNS number",
                    "tin": "TIN code",
                    "website": "http://website.com",
                    "inceptionDate": "2002-12-25" //Also accepts unix timestamp
                },
                "ssn": "123456781",
                "businessAddress": {
                    "streetAddress": "",
                    "zipcode": "",
                    "apt_unit": "",
                    "phone": ""
                },
                "personalAddress": {
                    "streetAddress": "",
                    "zipcode": "",
                    "apt_unit": "",
                    "phone": ""
                }
            }

+ Response 200 (application/json)
    
    + Body
    
            {
                "accountId": "account-id",
                "firstName": "firstname",
                "lastName": "lastname",
                "contact":{
                    "contactId": "contact-id", "email":"email"
                },
                "companyDetails": {
                    "name": "company name",
                },
                "_links": {
                    "self": {
                        "href": "https://behalf.com/api/account/account-id"
                    },
                    "terms": {
                        "href": "https://behalf.com/api/account/account-id/terms"
                    },
                    "customer-sales": {
                        "href": "https://behalf.com/api/customer-sales-info/link-id"
                    }
                }
            }

+ Response 201 (application/json)
    
    + Body
    
            {
                "accountId": "account-id",
                "firstName": "firstname",
                "lastName": "lastname",
                "contact":{
                    "contactId": "contact-id", "email":"email"
                },
                "companyDetails": {
                    "name": "company name",
                },
                "_links": {
                    "self": {
                        "href": "https://behalf.com/api/account/account-id"
                    },
                    "terms": {
                        "href": "https://behalf.com/api/account/account-id/terms"
                    },
                    "customer-sales": {
                        "href": "https://behalf.com/api/customer-sales-info/link-id"
                    }
                }
            }


### Update Account Details [PUT /api/account/{accountId}]
Update the details of an account. This action can be performed by a vendor only on <strong>his</strong> customers' accounts, 
and only <strong>before</strong> an account has passed the signup process. 
After signup, a vendor can not make any changes to a customer's account.
+ Parameters
    + accountId (required, string, `BHae12d442123`) ... Unique identifier of the /account resource

+ Response 200 (application/json)
    
    + Body
    
            {
                "accountId": "account-id",
                "firstName": "firstname",
                "lastName": "lastname",
                "contact":{
                    "contactId": "contact-id", "email":"email"
                },
                "companyDetails": {
                    "name": "company name",
                },
                "_links": {
                    "self": {
                        "href": "https://behalf.com/api/account/account-id"
                    },
                    "terms": {
                        "href": "https://behalf.com/api/account/account-id/terms"
                    },
                    "customer-sales": {
                        "href": "https://behalf.com/api/customer-sales-info/link-id"
                    }
                }
            }

# Group Terms

## Account Terms Resource [/api/account/{accountId}/terms]
This is an Account sub-resource that describes the account's available Behalf Terms. 
The vendor can use this resource only for <strong>his</strong> customers.
+ Parameters
    + accountId (required, string, `BHae12d442123`, `me`) ... Unique identifier of the /account resource

### Create Account Terms [POST]
Creates Terms resource for a specific account (specified by its <strong>accountId</strong> property).
The response includes the customer's Behalf terms, such as credit-line, available balance, pricing etc.

This action may cause Terms to be recalcualted for that account.

Note that in some cases the Terms calculation may take up to a couple of minutes.
In those cases the Response will have Code <strong>202</strong> - "Request is In Process" - and the Terms properties will not be set.
The user (vendor) will have to post this request again in a later time (e.g. within 2-3 minutes) in order to get the Terms details.

In case the customer is not entitled for Behalf Terms - the Response will inclusde Code <strong>532</strong>.

+ Response 200 (application/json)

        {
            "accountId": "BHae12d442123",
            "line": 5000,
            "balance": 4500,
            "maxRepayment": 60,
            "feePer1K": 20,
            "grace": null,
            "minAmount": 300,
            "maxAmount": 5000,
            "repaymentsFrequency": "Monthly|Daily"
        }
          
+ Response 202 (application/json)

    Request is In Process, try again within few minutes.

    + Body
    
            {
                "accountId": "BHae12d442123",
                "line": 0,
                "balance": 0,
                "maxRepayment": 0,
                "feePer1K": 0,
                "grace": null,
                "minAmount": 0,
                "maxAmount": 0,
                "repaymentsFrequency": ""
            }
          
+ Response 403 (application/json)
    
    Access to the account's Terms is forbidden because no link exists between the currently authenticated vendor and the customer.
    Note that in some cases, an 403 is returned when the requested Account ID does not exist, instead of the expected 404.

    + Body
    
            {
                "type": "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html",
                "title": "Forbidden",
                "status": 403,
                "detail": "Access to account terms is forbidden"
            }      
+ Response 531 (application/json)
    
    Account is missing properties, followed by a list of the missing properties. This list details those /account resource properties which have no value and must be entered to retrieve Terms.
    
    Entering the missing values into /account properties is done by POST to the /account with the relevant accountId.

    + Body
    
            {
                "type": "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html",
                "title": "Bad Request",
                "status": 531,
                "detail": "Account is missing properties: ssn"
            }
            
+ Response 532 (application/json)
    
    Account Credit Line was declined. This account currently has no creditline available from Behalf and cannot create payments.
    
    Note that this state is not permanent and may change in future GET terms checks.
    
    + Body
    
            {
                "type": "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html",
                "title": "Credit Line Delined",
                "status": 532,
                "detail": "The account was declined a credit line"
            }

# Group Payments

## Payment Resource [/api/payments/]
A resource that describes a transaction between a customer and a vendor.
A Payment object shows meta information about the payment and its current state. 
This object is used as the basis for repayment plans and enforcing the lifecycle of a transaction.

### Create a New Payment [POST /api/payments/]

Create a new Payment entity with basic information.
The Response includes a <strong>paymentId</strong> property which will be used in any future requests regarding this Payment.
Note that creating a Payment does not submit it but only refer it to the relevant customer.

+ Request (application/json)

    + Body

            {
                "supplierCompanyId": "001J0000011DTrDIAW",
                "customerCompanyId": "001J000001YxXxwIAF",
                "amount": 345,
                "orderId": "976-ab-12",
                "messageToBuyer": "hello",
                "messageToSeller": null
            }

+ Response 201 (applicatio/json)

    + Body

            {
                "paymentId": "006J000000HwiPGIAZ",
                "supplierCompanyId": "001J0000011DTrDIAW",
                "customerCompanyId": "001J000001YxXxwIAF",
                "supplierCompany": {
                    "name": "Behalf Vendor"
                },
                "customerBankId": "a06J000000Bqqn4IAB",
                "amount": 345,
                "status": "DRAFT",
                "termsAndConditions": false,
                "orderId": "976-ab-12",
                "messageToBuyer": "hello",
                "messageToSeller": null,
                "referred": true,
                "submissionDate": null,
                "initialDate": "2015-02-22",
                "payDate": null,
                "payoutMethod": "Virtual Card",
                "totalToCollect": 357,
                "outstandingAmount": 357,
                "numSetteledRepayments": 0,
                "_links": {
                    "self": {
                        "href": "https://www.behalf.com/api/payments/006J000000HwiPGIAZ"
                    },
                    "tnc": {
                        "href": "http://www.behalf.com/termsAndConditions"
                    }
                }
            }


### Retrieve Payment Details [GET /api/payments/{paymentId}]

Retrieve a Payment resource identified by its <strong>paymentId</strong> property.
Payment entities include all the relevant information held by Behalf for a particular payment, including its status.
The vendor may send this request at any time in order to check whether the customer already submitted the Payment (as reflected in the <strong>status</strong> property) .

+ Parameters

    + paymentId (required, string, `BHae12d442123`) ... Unique identifier of the /payments resource
   
+ Response 200 (applicatio/json)

    + Body

            {
                "paymentId": "006J000000HwiPGIAZ",
                "supplierCompanyId": "001J0000011DTrDIAW",
                "customerCompanyId": "001J000001YxXxwIAF",
                "supplierCompany": {
                    "name": "Behalf Vendor"
                },
                "customerBankId": "a06J000000Bqqn4IAB",
                "amount": 345,
                "status": "DRAFT",
                "termsAndConditions": false,
                "orderId": "976-ab-12",
                "messageToBuyer": "hello",
                "messageToSeller": null,
                "referred": true,
                "submissionDate": "2015-02-22",
                "initialDate": "2015-02-22",
                "payDate": null,
                "payoutMethod": "Virtual Card",
                "totalToCollect": 357,
                "outstandingAmount": 357,
                "numSetteledRepayments": 0
                "_links": {
                    "self": {
                        "href": "https://www.behalf.com/api/payments/006J000000HwiPGIAZ"
                    },
                    "tnc": {
                        "href": "http://www.behalf.com/termsAndConditions"
                    }
                }
            }
+ Response 404 (application/json)
    
    + Body
    
            {
                "type": "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html",
                "title": "Not found",
                "status": 404,
                "detail": "Payment does not exist"
            }


### Update Payment Status [PATCH /api/payments/{paymentId}]

This request allows the vendor to cancel a specific referred Payment, 
or to confirm a Payment that was initiated by the customer, by setting its <strong>status</strong> property.

The Payment is idendified by its <strong>paymentId</strong> property.

Note that this request can be done only <strong>before</strong> the Payment is Approved by Behalf.


+ Parameters

    + paymentId (required, string, `BHae12d442123`) ... Unique identifier of the /payments resource
   

+ Request (application/json)

    + Body
    
            {
                "status": "cancelled"
            }
                
+ Response 200 (application/json)

    + Body

            {
                "paymentId": "006J000000HwiPGIAZ",
                "supplierCompanyId": "001J0000011DTrDIAW",
                "customerCompanyId": "001J000001YxXxwIAF",
                "supplierCompany": {
                    "name": "Behalf Vendor"
                },
                "customerBankId": "a06J000000Bqqn4IAB",
                "amount": 345,
                "status": "cancelled",
                "termsAndConditions": false,
                "orderId": "976-ab-12",
                "messageToBuyer": "hello",
                "messageToSeller": null,
                "referred": true,
                "submissionDate": "2015-02-22",
                "initialDate": "2015-02-22",
                "payDate": null,
                "payoutMethod": "Virtual Card",
                "totalToCollect": 357,
                "outstandingAmount": 357,
                "numSetteledRepayments": 0,
                "_links": {
                    "tnc": {"href": "http://www.behalf.com/termsAndConditions"}
                }
            }

# Group Customer Sales Info

## Customer Sales Info Resource [/api/customer-sales-info/{linkId}]
A resource that describes the connection between a particular customer and a particular vendor. This resource provides historical information about the customer from the vendor's point of view.
The linkId parameter is returned as part of the POST /api/account action
+ Parameters
    + linkId (required, string, `BHae12d442123`) ... Unique identifier of the /customer-sales-info resource

### Retrieve Customer Sales Info [GET]
Get the customer's sales info which was provided by the authenticated user (vendor).

+ Response 200 (application/json)

    + Body

            {
                "linkId": "BHae12d442123",
                "vendorId": "BHae12d442123",
                "customerId": "BHae12d442123",
                "knownSince": "2002-12-25",
                "totalSalesAmount": 1000,
                "totalSalesCount": 355,
                "ytdSalesAmount": 45,
                "ytdSalesCount": 12,
                "avgYtdSalesAmount": 32,
                "paymentMethod": "COD"
            }

 
 
### Update Customer Sales Info [PUT]
Update the customer's sales info. The Vendor can do that only for <strong>his</strong> customers.

+ Request (application/json)

    + Body

            {
                "knownSince": "2002-12-25",
                "totalSalesAmount": 1000,
                "totalSalesCount": 355,
                "ytdSalesAmount": 45,
                "ytdSalesCount": 12,
                "avgYtdSalesAmount": 32,
                "paymentMethod": "COD"
            }

+ Response 200 (application/json)

    + Body

            {
                "linkId": "BHae12d442123",
                "vendorId": "BHae12d442123",
                "customerId": "BHae12d442123",
                "knownSince": "2002-12-25",
                "totalSalesAmount": 1000,
                "totalSalesCount": 355,
                "ytdSalesAmount": 45,
                "ytdSalesCount": 12,
                "avgYtdSalesAmount": 32,
                "paymentMethod": "COD"
            }
            

# Group Appendix

More details regarding the Resources properties can be found in 

https://docs.google.com/a/zazma.com/document/d/1rGATWr_EgbGg739Z39FAl0ubb2ODeVGdcaPE4Kn6Clk/edit?usp=sharing
