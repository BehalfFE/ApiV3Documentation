FORMAT: 1A

# Behalf API v3
Behalf's API aims to expose all available functionality to an authenticated client.

Using this API, a remote system can create new users, approve customers for loans and generate referred payments. In this reference you can find information about the actions Behalf exposes and the data resources the API returns as responses to these requests.

# Standard URL structure
Behalf’s API uses the https scheme only. Requests in http will be completely ignored.

Behalf API requests rely on REST verbs to perform actions or to retrieve information.
Read actions are performed using the GET action and associated query part of the URL.

    GET /v3/leads/<leadid>

Resource creation is done using the POST action. Parameters are passed in the request body.

    POST /v3/leads
    {"email": <lead email>}

Resource modification is done using the PUT action. Parameters are passed in the request body.

    PUT /v3/leads/<leadid>
    {"email": <lead email>}

Some resources’ properties can be modified directly. Note that some patch commands may refer to elements which are not actually properties.

    PATCH /v3/leads/<leadid>
    {"email": <lead email>}


Resource removal is done using the DELETE action. Parameters are passed in the query part of the URL. Note that PUT requests will expect an ‘id’ value to be present in the body. This id name may change for different requests.

    DELETE /v3/leads/<leadid>

# Required headers
The Behalf API strictly requires several headers to be sent in order to perform authentication and identify legitimate requests. All requests must include the following headers:

**X-Behalf-Signature**: An authentication signature used for authentication. More details in the authentication section

**Accept**: The client should specify the desired response format. For now, only application/json is supported.

**Content-Type**: *POST*, *PATCH* and *PUT* requests must also specify the body’s format as application/json

# Request parameters
Parameters used to pass information for requests are strictly defined for their contents. Requests to the API failing to provide legal values are rejected outright.

# Response structure
Standard response structure will include the following header:

    Content-Type: application/json

## Data Types
The body will include a JSON encoded object of the resource requested.
The JSON structure returned is limited to primitives (boolean, number, string) and compounds (array, objects, null).

Dates and DateTime elements are explicitly expected to be formatted in ISO8601.

DateTime elements accept a timezone in input but will always return a UTC formatted ISO8601 string.

Paramters that accept 'me' as input, will also accept 'ME', 'Me', 'yo', 'ich', 'ge', 'mig' & 'meg'.
The API will replace those symbols with the requestor ID.



## Response Codes
Response codes indicate the way the requested action was handled:

**200**: OK - the action was executed and completed

**201**: Created - standard response to a POST action which also indicates that resource creation is also completed

**202**: Accepted - The action is queued and will be executed. The http status message will include the queue ID of the action. 

Errors are indicated by http response code along with a corresponding human readable message. Additional details will be attached as a JSON encoded resource structure.

Standard errors are:

**400**: Parameter validation failed
            
**401**: Authentication required or failed

    {
        "type": "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html",
        "title": "Unauthorized",
        "status": 401,
        "detail": "Unauthorized"
    }
    
**403**: Requested resource is not available for the currently authenticated user

**404**: Resource not found

**405**: Method not allowed

**409**: Conflict

**422**: Unprocessable Entity due to input validation error

    {
        "validation_messages": {
            "companyDetails": {
                "name": {
                    "stringLengthTooLong": "The input is more than 25 characters long"
                }
            }
        },
        "type": "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html",
        "title": "Unprocessable Entity",
        "status": 422,
        "detail": "Failed Validation"
    }

**500**: Resource action failed due to internal error

**503**: Resource is currently unavailable due to maintenance or overloading

**530**: Resource is currently unavailable, try again later. This response code will have a Retry-After header to suggest an estimated retry time

**531**: Related acount is missing required attributes (SSN or Address).

**532**: Credit Line Declined.

Specific application errors are returned as 500 errors in the range 530 - 580

## Hypermedia links

The Behalf API v3 supports Hypermedia links as part of its standard response structure. For more information about Hypermedia links: http://en.wikipedia.org/wiki/HATEOAS.

For Behalf API consumers, the Hypermedia links that are provided indicate the next available steps for the current resource. Based on these links, a developer or an automated process can explore the API or get indications for the next steps in the current workflow.
This next step is described as a hyperlink URL which represents a resource. This resource can be called using http verbs normally. Note that many of our actions respond only to specific verbs. An invalid method error (405) will be returned if a specific verb is unavailable.

You can always find out what verbs are available by using the OPTIONS http VERB on a resource.

HAL Links structure example:

    "_links": {
        "self": {
            "href": "https://behalf.com/api/account/account-id"
        },
        "terms": {
            "href": "https://behalf.com/api/account/account-id/terms"
        },
        "customer-sales": {
            "href": "https://behalf.com/api/customer-sales-info/link-id"
        }
    }

# Authentication
The X-Behalf-Signature header contains a credentials identifier and a credentials signature. The identifier is a constant ID generated for the user. This ID is not secret. The signature, however, is a hash generated by the client for authentication.

## Obtaining or revoking public and private keys

Public and Private keys for communicating with Behalf can be obtained through our Customer Support service. Only certified merchants and verified customers may obtain keys for integration.

Keys are provided as requested and only a single pair for every single user.

## Using private keys for request signing
The credentials signature is based on the URL path, the request body (empty string if none is present) and the query parameters.

These strings are concatenated to each other in a particular order. The credentials' secret keys is used to sign the string we created.

The process of creating the signature starts with serializing the request data into a string in a consistent manner:

    <url path><request-body-json | empty string><un-formatted-request-query-parameters | empty string>

The generated string is then fed into a sha256 hmac function, keyed by the secret key. The resulting hash is sent in the signature header.

# Signature generation example
**URL**: https://beta.behalf.com/api/v1/lead/my-lead-id

With the key pair

    public my-public-key
    private my-private-key

The string for hashing is:

    "/api/v1/lead/my-lead-id"

The private key for signing is “my-private-key”

Run (in php online functions):

    echo bin2hex(mhash( MHASH_SHA256, "/api/v1/lead/my-lead-id", "my-private-key"));

OR

    echo hmac_hash( 'sha256', "/api/v1/lead/my-lead-id", "my-private-key");

The result is:

    f8bd1e5925e00ed709d66e1ff6fd49949836977d124a21de3e19f887896fdd72

The X-Behalf-Signature header is

    X-Behalf-Signature: my-public-key;f8bd1e5925e00ed709d66e1ff6fd49949836977d124a21de3e19f887896fdd72

# Versioning
The Behalf API supports a soft versioning policy which provides for changes in behavior, input and output options. Soft versioning means that output and input may be modified as long as it keeps backwards compatibility by not modifying or removing existing elements. Behalf is allowed to add new optional parameters or new output elements without changing the version of the API.

Any modification of input, output or behavior of an existing (and deployed) API must be done on a new version and allow for an essentially different API to replace the old one in the new version. Naturally, the old version must continue to work and keep to its previous behavior regardless of changes to any other version, higher or lower.

Version negotiation is done through the URL path and is required to be specified. An unknown or unsupported version will be rejected outright.


# Standard GET query parameters
The following parameters and their specification are considered standard, optional parameters for any GET collection or entityt request. Note that in some contexts, these parameters will not make sense (such as limit on a GET single entity request).

## Pagination parameters
A GET request may use the limit and page query parameters to perform basic pagination on a collection of entities retrieved from the Behalf API.
**limit** The limit parameter is the number of rows to be retrieved by any single page of the collection.
**page** The page number to be retrieved. The first page is 1 and continues at single increments.

# Group Workflow
## Token Resource [/api/tokens]
A token represents a user tracked action that is expected to lead to a particular system workflow, such as sign up or other conversion of state.

### Create a new token [POST]
Create a new token and start its associated workflow
+ Request (application/json)

    + Body
    
            {
                "type": "signup"
                "email": "new-user@behalf.com"
            }
            
+ Response 201 (application/json)

    + Body

            {
                "token": "BEa094e92215",
                "type": "signup"
            }
            
            
# Group Members
## Account Resource [/api/account/]
Account resource describing a single set of credentials and associated Company. This resource is available to authenticated users for posting.

### Update Account details [PUT /api/account/{accountId}]
Update the details of an account. This action can only be performed on the authenticated user himself or by a linked vendor before the account has passed the signup process. After signup, a vendor may not make changes to a customer's account.
+ Parameters
    + accountId (required, string, `BHae12d442123`) ... Unique identifier of the /account resource

+ Response 200 (application/json)
    
    + Body
    
            {
                "accountId": "account-id",
                "firstName": "firstname",
                "lastName": "lastname",
                "contact":{
                    "contactId": "contact-id", "email":"email"
                },
                "companyDetails": {
                    "name": "company name",
                },
                "_links": {
                    "self": {
                        "href": "https://behalf.com/api/account/account-id"
                    },
                    "terms": {
                        "href": "https://behalf.com/api/account/account-id/terms"
                    },
                    "customer-sales": {
                        "href": "https://behalf.com/api/customer-sales-info/link-id"
                    }
                }
            }

### Retrieve a collection of accounts [GET /api/account{?query}]

This action retrieves a list of account elements linked to the authenticated user of the request.

+ Parameters

    + query (optional, string) ... Search pattern when searching for account information

+ Request (application/json)

+ Response 200 (application/json)

    + Body

            {
                "_links": {
                    "self": {
                        "href": "https://www.behalf.com/api/account?page=1"
                    },
                    "first": {
                        "href": "https://www.behalf.com/api/account"
                    },
                    "last": {
                        "href": "https://www.behalf.com/api/account?page=1"
                    }
                },
                "_embedded": {
                    "account": [
                        {
                            "accountId": "account-id",
                            "firstName": "firstname",
                            "lastName": "lastname",
                            "contact":{
                                "contactId": "contact-id", "email":"email"
                            },
                            "companyDetails": {
                                "name": "company name",
                            },
                            "accountBalance": 2100
                        }
                    ]
                },
                "page_count": 1,
                "page_size": 25,
                "total_items": 1
            }

### Create or Add data to an Account [POST]
This action creates a new Account resource or adds missing information to an existing one. It cannot be used to override existing information.
Additionally, this action creates a link between the currently authenticated user and the account.
A POST to /account can get two affirmative responses - 200 or 201.

The accountBalance property depends on the completion of the qualification step or terms retrieval for the account. Otherwise, this parameter may be 0.

**The 201 response** indicates the resource was created successfully and the requesting user is linked to the newly created account.

**The 200 response** indicates the resource already existed and the requesting user is now linked to the account.

In either case, the same resource is returned. An existing resource will be updated with new information only if that information is missing from the resource. An existing property will not be overridden by a POST.
+ Request Mandatory parameters only (application/json)

    + Body

            {
                "firstName": "firstname",
                "lastName":  "lastname",
                "contact": {"email":"email"},
                "companyDetails": {"name": "company name"}
            }
    
    + Schema

            {
                "type": "object",
                "required": true,
                "properties": {
                    "firstName": {
                        "type": "string",
                        "required": true
                    },
                    "lastName": {
                        "type": "string",
                        "required": true
                    },
                    "contact": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "email": {
                                "type": "string",
                                "required": true
                            }
                        }
                    },
                    "companyDetails": {
                        "type": "object",
                        "required": true,
                        "properties": {
                            "name": {
                                "type": "string",
                                "required": true
                            }
                        }
                    }
                }
            }

+ Response 200 (application/json)
    
    + Body
    
            {
                "accountId": "account-id",
                "firstName": "firstname",
                "lastName": "lastname",
                "contact":{
                    "contactId": "contact-id", "email":"email"
                },
                "companyDetails": {
                    "name": "company name",
                },
                "_links": {
                    "self": {
                        "href": "https://behalf.com/api/account/account-id"
                    },
                    "terms": {
                        "href": "https://behalf.com/api/account/account-id/terms"
                    },
                    "customer-sales": {
                        "href": "https://behalf.com/api/customer-sales-info/link-id"
                    }
                }
            }

+ Response 201 (application/json)
    
    + Body
    
            {
                "accountId": "account-id",
                "firstName": "firstname",
                "lastName": "lastname",
                "contact":{
                    "contactId": "contact-id", "email":"email"
                },
                "companyDetails": {
                    "name": "company name",
                },
                "_links": {
                    "self": {
                        "href": "https://behalf.com/api/account/account-id"
                    },
                    "terms": {
                        "href": "https://behalf.com/api/account/account-id/terms"
                    },
                    "customer-sales": {
                        "href": "https://behalf.com/api/customer-sales-info/link-id"
                    }
                }
            }

+ Request All available parameters (application/json)
    
    + Body
    
            {
                "firstName": "firstname",
                "lastName":  "lastname",
                "contact": {"email":"email"},
                "companyDetails": {
                    "name": "company name",
                    "duns": "DUNS number",
                    "tin": "TIN code",
                    "website": "http://website.com",
                    "inceptionDate": "2002-12-25" //Also accepts unix timestamp
                },
                "ssn": "123456781",
                "businessAddress": {
                    "streetAddress": "",
                    "zipcode": "",
                    "apt_unit": "",
                    "phone": ""
                },
                "personalAddress": {
                    "streetAddress": "",
                    "zipcode": "",
                    "apt_unit": "",
                    "phone": ""
                }
            }

+ Response 200 (application/json)
    
    + Body
    
            {
                "accountId": "account-id",
                "firstName": "firstname",
                "lastName": "lastname",
                "contact":{
                    "contactId": "contact-id", "email":"email"
                },
                "companyDetails": {
                    "name": "company name",
                },
                "accountBalance": 2100,
                "_links": {
                    "self": {
                        "href": "https://behalf.com/api/account/account-id"
                    },
                    "terms": {
                        "href": "https://behalf.com/api/account/account-id/terms"
                    },
                    "customer-sales": {
                        "href": "https://behalf.com/api/customer-sales-info/link-id"
                    }
                }
            }

+ Response 201 (application/json)
    
    + Body
    
            {
                "accountId": "account-id",
                "firstName": "firstname",
                "lastName": "lastname",
                "contact":{
                    "contactId": "contact-id", "email":"email"
                },
                "companyDetails": {
                    "name": "company name",
                },
                "accountBalance": 0,
                "_links": {
                    "self": {
                        "href": "https://behalf.com/api/account/account-id"
                    },
                    "terms": {
                        "href": "https://behalf.com/api/account/account-id/terms"
                    },
                    "customer-sales": {
                        "href": "https://behalf.com/api/customer-sales-info/link-id"
                    }
                }
            }

## Account Personal Address [/api/account/{accountId}/personalAddress]
An account's personal address sub-resource. This resource contains location and contact details of the account's owner
+ Parameters
    + accountId (required, string, `BHae12d442123`, `me`) ... Unique identifier of the /account resource

### Update Personal Address [PUT]

+ Request (application/json)
    
    + Body
    
            {
                "streetAddress": "123rd 9th East st.",
                "zipCode": "44321",
                "apt_unit": "12c",
                "phone": "9718332561"
            }
            
+ Response 200 (application/json)
    
    + Body
    
            {
                "accountId": "BHae12d442123",
                "streetAddress": "123rd 9th East st.",
                "zipCode": "44321",
                "apt_unit": "12c",
                "phone": "9718332561"
            }

## Account Business Address [/api/account/{accountId}/businessAddress]
An account's business address sub-resource. This resource contains location and contact details of the account's business or company
+ Parameters
    + accountId (required, string, `BHae12d442123`, `me`) ... Unique identifier of the /account resource

### Update Business Address [PUT]

+ Request (application/json)

    + Body

            {
                "streetAddress": "123rd 9th East st.",
                "zipCode": "44321",
                "apt_unit": "12c",
                "phone": "9718332561"
            }
            
+ Response 200 (application/json)

    + Body

            {
                "accountId": "BHae12d442123",
                "streetAddress": "123rd 9th East st.",
                "zipCode": "44321",
                "apt_unit": "12c",
                "phone": "9718332561"
            }

## Account Terms [/api/account/{accountId}/terms{?vendor}]
Account subresource that describes the account's available terms. This resource is only available to authenticated linked users or to the owner of the account.
+ Parameters
    + accountId (required, string, `BHae12d442123`, `me`) ... Unique identifier of the /account resource
    + vendor (optional, string, `BHae12d442123`) ... Unique identifier of the vendor to cross terms with. Can also accept 'me' value.

### Retrieve account terms [GET]
Retrieve a terms resource for the requested account. This action may cause terms to be recalcualted for the account.
If a vendor is specified, the terms are provided for an expected transaction between the customer's account and the specified vendor.
+ Response 200 (application/json)

        {
            "accountId": "BHae12d442123",
            "line": 5000,
            "balance": 4500,
            "maxRepayment": 60,
            "feePer1K": 20,
            "grace": null,
            "minAmount": 300,
            "maxAmount": 5000,
            "repaymentsFrequency": "Monthly|Daily"
        }
          
+ Response 403 (application/json)
    
    Access to the account's terms is forbidden because no link exists between the currently authenticated vendor and the customer.
    Note that in some cases, an 403 is returned when the requested Account ID does not exist, instead of the expected 404.

    + Body
    
            {
                "type": "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html",
                "title": "Forbidden",
                "status": 403,
                "detail": "Access to account terms is forbidden"
            }      
+ Response 531 (application/json)
    
    "Account is missing properties" followed by a list of missing properties. This list details those /account resource properties which have no value and must be entered to retrieve Terms.
    
    Entering new values into /account properties is done by POST to /account with the terms accountId.

    + Body
    
            {
                "type": "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html",
                "title": "Bad Request",
                "status": 531,
                "detail": "Account is missing properties: ssn"
            }
            
+ Response 532 (application/json)
    
    Account Credit Line was declined. This account currently has no creditline available from Behalf and cannot create payments.
    
    Note that this state is not permanent and may change in future GET terms checks.
    
    + Body
    
            {
                "type": "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html",
                "title": "Credit Line Delined",
                "status": 532,
                "detail": "The account was declined a credit line"
            }

## Customer Sales Info [/api/customer-sales-info/{linkId}]
A resource that describes the connection between a particular customer and a particular vendor. This resource provides historical information about the customer, from the vendor's point of view.
The linkId parameter is returned as part of the POST /api/account action
+ Parameters
    + linkId (required, string, `BHae12d442123`) ... Unique identifier of the /links resource

### Retrieve a link by linkId [GET]

+ Response 200 (application/json)

    + Body

            {
                "linkId": "BHae12d442123",
                "vendorId": "BHae12d442123",
                "customerId": "BHae12d442123",
                "knownSince": "2002-12-25",
                "totalSalesAmount": 1000,
                "totalSalesCount": 355,
                "ytdSalesAmount": 45,
                "ytdSalesCount": 12,
                "avgYtdSalesAmount": 32,
                "paymentMethod": "COD"
            }
            
### Update link properties [PUT]

+ Request (application/json)

    + Body

            {
                "knownSince": "2002-12-25",
                "totalSalesAmount": 1000,
                "totalSalesCount": 355,
                "ytdSalesAmount": 45,
                "ytdSalesCount": 12,
                "avgYtdSalesAmount": 32,
                "paymentMethod": "COD"
            }

+ Response 200 (application/json)

    + Body

            {
                "linkId": "BHae12d442123",
                "vendorId": "BHae12d442123",
                "customerId": "BHae12d442123",
                "knownSince": "2002-12-25",
                "totalSalesAmount": 1000,
                "totalSalesCount": 355,
                "ytdSalesAmount": 45,
                "ytdSalesCount": 12,
                "avgYtdSalesAmount": 32,
                "paymentMethod": "COD"
            }
            
# Group Pay
All action URLs are assumed to have the /api prefix. This path directory is omitted from the examples and resource names for brevity.

## Payments [/api/payments/{paymentId}]
A resource that describes a transaction between a customer and a vendor.
A Payment object shows meta information about the payment and its current state. This object is used as the basis for repayment plans and enforcing the lifecycle of a transaction.

+ Parameters

    + paymentId (required, string, `BHae12d442123`) ... Unique identifier of the /payments resource

### Retrieve a Payment [GET /api/payments/{paymentId}]

Retrieve a payment entity according to it's payment Id.
Payment entities include all the relevant information held by Behalf for a particular payment. This includes a link to the terms and conditions signed by the customer.
   
+ Response 200 (applicatio/json)

    + Body

            {
                "paymentId": "006J000000HwiPGIAZ",
                "supplierCompanyId": "001J0000011DTrDIAW",
                "customerCompanyId": "001J000001YxXxwIAF",
                "supplierCompany": {
                    "name": "Behalf Vendor"
                },
                "customerBankId": "a06J000000Bqqn4IAB",
                "amount": 345,
                "status": "DRAFT",
                "termsAndConditions": false,
                "orderId": null,
                "messageToBuyer": null,
                "messageToSeller": null,
                "referred": false,
                "submissionDate": "2015-02-22",
                "initialDate": "2015-02-22",
                "payDate": null,
                "payoutMethod": "Virtual Card",
                "totalToCollect": 357,
                "outstandingAmount": 357,
                "numSetteledRepayments": 0
                "_links": {
                    "self": {
                        "href": "https://www.behalf.com/api/payments/006J000000HwiPGIAZ"
                    },
                    "tnc": {
                        "href": "http://www.behalf.com/termsAndConditions"
                    }
                }
            }
+ Response 404 (application/json)
    
    + Body
    
            {
                "type": "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html",
                "title": "Not found",
                "status": 404,
                "detail": "Payment does not exist"
            }

### Create a new payment [POST]

Create a payment entity with basic information. Note that creating a transaction does not submit it.

+ Request (application/json)

    + Body

            {
                "supplierCompanyId": "001J0000011DTrDIAW",
                "customerCompanyId": "001J000001YxXxwIAF",
                "amount": 345,
                "orderId": null,
                "messageToBuyer": null,
                "messageToSeller": null
            }

+ Response 201 (applicatio/json)

    + Body

            {
                "paymentId": "006J000000HwiPGIAZ",
                "supplierCompanyId": "001J0000011DTrDIAW",
                "customerCompanyId": "001J000001YxXxwIAF",
                "supplierCompany": {
                    "name": "Behalf Vendor"
                },
                "customerBankId": "a06J000000Bqqn4IAB",
                "amount": 345,
                "status": "DRAFT",
                "termsAndConditions": false,
                "orderId": null,
                "messageToBuyer": null,
                "messageToSeller": null,
                "referred": false,
                "submissionDate": null,
                "initialDate": "2015-02-22",
                "payDate": null,
                "payoutMethod": "Virtual Card",
                "totalToCollect": 357,
                "outstandingAmount": 357,
                "numSetteledRepayments": 0,
                "_links": {
                    "self": {
                        "href": "https://www.behalf.com/api/payments/006J000000HwiPGIAZ"
                    },
                    "tnc": {
                        "href": "http://www.behalf.com/termsAndConditions"
                    }
                }
            }

### Get a list of payments [GET /api/payments]

+ Request (application/json)

+ Response 200 (application/json)

    + Body

            {
                "_links": {
                    "self": {
                        "href": "https://www.behalf.com/api/payments?page=1"
                    },
                    "first": {
                        "href": "https://www.behalf.com/api/payments"
                    },
                    "last": {
                        "href": "https://www.behalf.com/api/payments?page=1"
                    }
                },
                "_embedded": {
                    "payments": [
                       {
                            "paymentId": "006J000000HwiPGIAZ",
                            "supplierCompanyId": "001J0000011DTrDIAW",
                            "customerCompanyId": "001J000001YxXxwIAF",
                            "supplierCompany": {
                                "name": "Behalf Vendor"
                            },
                            "customerBankId": "a06J000000Bqqn4IAB",
                            "amount": 345,
                            "status": "DRAFT",
                            "termsAndConditions": false,
                            "orderId": null,
                            "messageToBuyer": null,
                            "messageToSeller": null,
                            "referred": false,
                            "submissionDate": "2015-02-22",
                            "initialDate": "2015-02-22",
                            "payDate": null,
                            "payoutMethod": "Virtual Card",
                            "totalToCollect": 357,
                            "outstandingAmount": 357,
                            "numSetteledRepayments": 0
                        },
                        {
                            "paymentId": "006J000000HwiPGIAZ",
                            "supplierCompanyId": "001J0000011DTrDIAW",
                            "customerCompanyId": "001J000001YxXxwIAF",
                            "supplierCompany": {
                                "name": "Behalf Vendor"
                            },
                            "customerBankId": "a06J000000Bqqn4IAB",
                            "amount": 345,
                            "status": "DRAFT",
                            "termsAndConditions": false,
                            "orderId": null,
                            "messageToBuyer": null,
                            "messageToSeller": null,
                            "referred": false,
                            "submissionDate": "2015-02-22",
                            "initialDate": "2015-02-22",
                            "payDate": null,
                            "payoutMethod": "Virtual Card",
                            "totalToCollect": 357,
                            "outstandingAmount": 357,
                            "numSetteledRepayments": 0
                        }
                    ]
                },
                "page_count": 1,
                "page_size": 25,
                "total_items": 6
            }

### Step payment workflow [PATCH]
Accepted properties:
* status - can be changed to "declined" or "confirm". Certain workflows may not allow a status to be changed to the requested status.
accepets 'canceled' or 'confirm'
+ Request (application/json)

    + Body
    
            {
                "status": "canceled"
            }
                
+ Response 200 (application/json)

    + Body

            {
                "paymentId": "006J000000HwiPGIAZ",
                "supplierCompanyId": "001J0000011DTrDIAW",
                "customerCompanyId": "001J000001YxXxwIAF",
                "supplierCompany": {
                    "name": "Behalf Vendor"
                },
                "customerBankId": "a06J000000Bqqn4IAB",
                "amount": 345,
                "status": "DRAFT",
                "termsAndConditions": false,
                "orderId": null,
                "messageToBuyer": null,
                "messageToSeller": null,
                "referred": false,
                "submissionDate": "2015-02-22",
                "initialDate": "2015-02-22",
                "payDate": null,
                "payoutMethod": "Virtual Card",
                "totalToCollect": 357,
                "outstandingAmount": 357,
                "numSetteledRepayments": 0,
                "_links": {
                    "tnc": {"href": "http://www.behalf.com/termsAndConditions"}
                }
            }

### Update Payment details [PUT /api/payments/{paymentId}?action=customerUpdate]
Update the only the repaymentFrequency of an Payment.  This action can only be performed on the customer of the payment  himself, for a vendor with offer Net. 
+ Parameters
    + action (required, string, `customerUpdate`) 
+ Request (application/json)

    + Body
    
            {
                "paymentId": "006J000000HwiPGIAZ",
                "repaymentFrequency": "Net",
                "supplierCompanyId": "001J0000011DTrDIAW",
                "customerCompanyId": "001J000001YxXxwIAF",
                "supplierCompany": {
                    "name": "Behalf Vendor"
                },
                "customerBankId": "a06J000000Bqqn4IAB",
                "amount": 345,
                "status": "DRAFT",
                "termsAndConditions": false,
                "orderId": null,
                "messageToBuyer": null,
                "messageToSeller": null,
                "referred": false,
                "submissionDate": "2015-02-22",
                "initialDate": "2015-02-22",
                "payDate": null,
                "payoutMethod": "Virtual Card",
                "totalToCollect": 357,
                "outstandingAmount": 357,
                "numSetteledRepayments": 0,
                "_links": {
                    "tnc": {"href": "http://www.behalf.com/termsAndConditions"}
                }
            }

+ Response 200 (application/json)
    
    + Body
    
            {
                "paymentId": "006J000000HwiPGIAZ",
                "repaymentFrequency": "Net",
                "supplierCompanyId": "001J0000011DTrDIAW",
                "customerCompanyId": "001J000001YxXxwIAF",
                "supplierCompany": {
                    "name": "Behalf Vendor"
                },
                "customerBankId": "a06J000000Bqqn4IAB",
                "amount": 345,
                "status": "DRAFT",
                "termsAndConditions": false,
                "orderId": null,
                "messageToBuyer": null,
                "messageToSeller": null,
                "referred": false,
                "submissionDate": "2015-02-22",
                "initialDate": "2015-02-22",
                "payDate": null,
                "payoutMethod": "Virtual Card",
                "totalToCollect": 357,
                "outstandingAmount": 357,
                "numSetteledRepayments": 0,
                "_links": {
                    "tnc": {"href": "http://www.behalf.com/termsAndConditions"}
                }
            }

## Bank [/api/banks/{bankid}]
A Bank resource is used to set up repayments for a granted loan. /bank represents a single bank object with current state and properties. An account may only access those bank resources that are directly bound to itself.
+ Parameters
    + bankid (required, string, `BHae12d442123`) ... Unique identifier of the /bank resource

### Change Bank state [PATCH]
The Patch action is used to modify specific traits of a bank resource. These traits are not the bank's properties but rather are derived from its state or influence it.

"primary" - Set a bank as the primary bank. The current primary bank will first be unset but not removed. A bank must be Verified in order to be eligible to become primary.

+ Request (application/json)

    + Body
    
            {
                "primary": true
            }

+ Response 200 (application/json)

    + Body

            {

                "bankId": "BHae12d442123",
                "accountId": "BHae12d442123",
                "routing": "123456789",
                "bankName": "Piggy Bank",
                "bankType": "BUSINESS",
                "number": "123456",
                "canACH": true,
                "depositType": "CHECKING",
                "nameOnAccount": "Ms. Piggy",
                "primary": true,
                "status": "Verified"
            }

### Remove a Bank [DELETE]
+ Response 200 (application/json)

    + Body

            {
                "bankId": "BHae12d442123",
                "accountId": "BHae12d442123",
                "routing": "123456789",
                "bankName": "Piggy Bank",
                "bankType": "BUSINESS",
                "number": "123456",
                "canACH": true,
                "depositType": "CHECKING",
                "nameOnAccount": "Ms. Piggy",
                "primary": true,
                "status": "Verified"
            }

## Plans [/api/payments/plans?payment_id={payment_id}&duration={duration}]
A resource which returns a payment object plans according to given duration in days.

### Get Plans [GET]
+ Parameters
    + payment_id (required, string, `006J000000Irr2qIAB`) ... Unique identifier of the /payments resource
    + duration (required, number, `30`) ... Duration in days

+ Response 200 (application/json)

    + Body
            
            {
              [
                "type": "Monthly",
                "installmentsCount": 2,
                "installmentAmount": 154.5,
                "discount": 10,
                "save": -1,
                "fee": 10,
                "paymentAmount": 300,
                "total": 309,
                "plan": [
                  {
                      "paydate": 
                      {
                        date: "2015-09-14 00:00:00.000000",
                        timeszone_type: 3,
                        timezone: "UTC"
                      },
                      "amount": 154.5
                  },
                  {
                      "paydate": 
                      {
                        date: "2015-10-01 00:00:00.000000",
                        timeszone_type: 3,
                        timezone: "UTC"
                      },
                      "amount": 154.5
                  },
                ]
              ]
            }
            
+ Response 404 (application/json)
    
    + Body
    
            {
                "type": "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html",
                "title": "Not found",
                "status": 404,
                "detail": "Payment does not exist"
            }

+ Response 403 (application/json)
    
    + Body
    
            {
                "type": "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html",
                "title": "Forbidden",
                "status": 403,
                "detail": "User is not part of the requested payment"
            }

+ Response 409 (application/json)
    
    + Body
    
            {
                "type": "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html",
                "title": "Conflict",
                "status": 409,
                "detail": "Payment is not in status draft"
            }